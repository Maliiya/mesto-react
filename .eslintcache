[{"C:\\WebSites\\mesto-react\\src\\index.js":"1","C:\\WebSites\\mesto-react\\src\\reportWebVitals.js":"2","C:\\WebSites\\mesto-react\\src\\components\\App.js":"3","C:\\WebSites\\mesto-react\\src\\components\\Header.js":"4","C:\\WebSites\\mesto-react\\src\\components\\Footer.js":"5","C:\\WebSites\\mesto-react\\src\\components\\Main.js":"6","C:\\WebSites\\mesto-react\\src\\components\\PopupWithForm.js":"7","C:\\WebSites\\mesto-react\\src\\components\\AddCardPopup.js":"8","C:\\WebSites\\mesto-react\\src\\components\\EditPopup.js":"9","C:\\WebSites\\mesto-react\\src\\components\\EditPhotoPopup.js":"10","C:\\WebSites\\mesto-react\\src\\components\\Api.js":"11","C:\\WebSites\\mesto-react\\src\\components\\Card.js":"12","C:\\WebSites\\mesto-react\\src\\components\\ImagePopup.js":"13","C:\\WebSites\\mesto-react\\src\\contexts\\CurrentUserContext.js":"14","C:\\WebSites\\mesto-react\\src\\components\\apiParams.js":"15"},{"size":517,"mtime":1609599044044,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":4034,"mtime":1614294328185,"results":"19","hashOfConfig":"17"},{"size":323,"mtime":1611949159026,"results":"20","hashOfConfig":"17"},{"size":271,"mtime":1611949186159,"results":"21","hashOfConfig":"17"},{"size":1546,"mtime":1614120298336,"results":"22","hashOfConfig":"17"},{"size":942,"mtime":1614284537260,"results":"23","hashOfConfig":"17"},{"size":1463,"mtime":1614287198174,"results":"24","hashOfConfig":"17"},{"size":1945,"mtime":1614284480500,"results":"25","hashOfConfig":"17"},{"size":1507,"mtime":1614294290612,"results":"26","hashOfConfig":"17"},{"size":4903,"mtime":1614007982396,"results":"27","hashOfConfig":"17"},{"size":1423,"mtime":1614120079382,"results":"28","hashOfConfig":"17"},{"size":628,"mtime":1611949108425,"results":"29","hashOfConfig":"17"},{"size":86,"mtime":1613672588677,"results":"30","hashOfConfig":"17"},{"size":305,"mtime":1613858167658,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1nj4k7c",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\WebSites\\mesto-react\\src\\index.js",[],["68","69"],"C:\\WebSites\\mesto-react\\src\\reportWebVitals.js",[],["70","71"],"C:\\WebSites\\mesto-react\\src\\components\\App.js",["72"],"import React from 'react';\nimport apiParams from './apiParams';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext'\nimport Header from './Header';\nimport Main from './Main';\nimport AddCardPopup from './AddCardPopup';\nimport EditPopup from './EditPopup';\nimport EditPhotoPopup from './EditPhotoPopup';\nimport ImagePopup from './ImagePopup';\nimport Footer from './Footer';\n\nfunction App()  {\n const api = apiParams.api;\n const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n const [selectedCard, setSelectedCard] = React.useState(false);\n\n const [currentUser, setCurrentUser] = React.useState('');\n const [cards, setCards] = React.useState('');\n\n const [buttonText, setButtonText] = React.useState('');\n\n\n React.useEffect(() => {\n    api.getUserInfo().then(data => {\n        setCurrentUser(data);\n    });\n\n    api.getInitialCards().then(data => {\n        console.log(data)\n        setCards(data)\n    });\n\n}, []);\n\n\nconst handleCardLike = (card) => {\n\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    !isLiked ?  api.likeCard(card._id).then((newCard) => {\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    })\n    :\n    api.deleteLike(card._id).then((newCard) => {\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      });\n\n}\nconst handleCardDelete = (card) => {\n    if(card.owner._id === currentUser._id){\n        api.deleteCard(card._id).then(() => {\n        const newCards = cards.filter((c) => c._id !== card._id );\n        setCards(newCards);\n        });  \n    }            \n}\n    \nconst handleCardClick = (card) => {\n    setSelectedCard(card);\n}\n    \nconst handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n };\n\nconst handleEditProfileClick = () => {\n   setIsEditProfilePopupOpen(true);\n\n}; \n\nconst handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n\n};\nconst closeAllPopups = () => {\n    //смена надписи на кнопке\n    setButtonText('');\n\n    setSelectedCard(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n}\n\nconst handleUpdateUser = (data) => {\n    setButtonText('Загрузка...');\n    api.editProfile(data.name, data.about).then(data => {\n        setCurrentUser(data);\n\n        closeAllPopups();\n        \n    });\n}\nconst handleUpdateAvatar = (data) => {\n    setButtonText('Загрузка...');\n\n    api.updateAvatar(data.avatar).then(data => {\n        setCurrentUser(data);\n\n        closeAllPopups();\n    });\n}\nconst handleAddPlaceSubmit = (data) => {\n    setButtonText('Загрузка...');\n\n    api.addCard(data.cardName, data.cardLink).then((newCard) => {\n        setCards([...cards, newCard]);\n\n        closeAllPopups();\n    }); \n    \n\n}\n\n        return (\n            <>\n                <CurrentUserContext.Provider value={currentUser}>\n                <Header />\n                <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} \n                    onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick} cards={cards} onCardLike={handleCardLike} onCardDelete={handleCardDelete}/>\n                <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\n                <AddCardPopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddCard={handleAddPlaceSubmit} buttonText={buttonText}/>\n                <EditPopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} buttonText={buttonText}/>\n                <EditPhotoPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} buttonText={buttonText}/>\n                <Footer />\n                </CurrentUserContext.Provider>\n            </>\n        );\n}\nexport default App;\n","C:\\WebSites\\mesto-react\\src\\components\\Header.js",[],"C:\\WebSites\\mesto-react\\src\\components\\Footer.js",[],"C:\\WebSites\\mesto-react\\src\\components\\Main.js",["73"],"import React from 'react';\r\nimport Card from './Card';\r\nimport apiParams from './apiParams';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Main(props){\r\n    const api = apiParams.api;\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    \r\n    \r\nreturn (\r\n    <>    \r\n        <div id='profileRoot' className=\"profile root__section\">\r\n            <div className=\"user-info\">\r\n                <div id = \"userInfoPic\" className=\"user-info__photo\" style={{ backgroundImage: 'url(' + currentUser.avatar + ')', cursor: \"pointer\"}}  onMouseUp={props.onEditAvatar}></div>\r\n                <div id=\"userInfoData\" className=\"user-info__data\">\r\n                <h1 id = \"userInfoName\" className=\"user-info__name\">{currentUser.name}</h1>\r\n                <p id = \"userInfoJob\" className=\"user-info__job\">{currentUser.about}</p>\r\n                <button id=\"userInfoEditButton\" className=\"button user-info-edit__button\" onMouseUp={props.onEditProfile}>Edit</button>\r\n                </div>\r\n                <button id=\"userInfoButton\" className=\"button user-info__button\" onMouseUp={props.onAddPlace}>+</button>\r\n            </div>\r\n        </div>\r\n        <div id=\"placesList\" className=\"places-list root__section\">\r\n            {props.cards && props.cards.map((card, key) => {\r\n\r\n                return  <Card onCardClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete} card={card} key={key}/> \r\n            })}\r\n        </div>\r\n    </>\r\n    );\r\n\r\n}\r\nexport default Main;","C:\\WebSites\\mesto-react\\src\\components\\PopupWithForm.js",[],"C:\\WebSites\\mesto-react\\src\\components\\AddCardPopup.js",[],"C:\\WebSites\\mesto-react\\src\\components\\EditPopup.js",["74"],"import React, { useState } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\n\r\nfunction EditPopup(props){\r\n\r\nconst currentUser = React.useContext(CurrentUserContext);\r\n\r\n    const [name, setName] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n\r\n\r\n    const handleChangeName = (e) => {\r\n        setName(e.target.value)\r\n    }\r\n    const handleChangeDescription = (e) => {\r\n        setDescription(e.target.value)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n    }, [currentUser]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Передаём значения управляемых компонентов во внешний обработчик\r\n        props.onUpdateUser({\r\n          name,\r\n          about: description,\r\n        });\r\n    }\r\n\r\n    return (\r\n                \r\n        <PopupWithForm onSubmit={handleSubmit} isOpen={props.isOpen} onClose={props.onClose} name=\"editPopup\" submitBtnTitle=\"Сохранить\" title=\"Редактировать профиль\" buttonText={props.buttonText} children={\r\n            <>\r\n                <input id=\"inputUserNameEdit\" type=\"text\" minLength=\"2\" maxLength=\"30\" onChange={handleChangeName} required name=\"userName\" className=\"popup__input popup__input_type_userName\" placeholder=\"Имя\"/>\r\n                <span id=\"error-inputUserNameEdit\" className=\"error\"/>\r\n                \r\n                <input id=\"inputUserInfoEdit\" type=\"text\" name=\"userInfo\" minLength=\"2\" maxLength=\"30\" onChange={handleChangeDescription} required className=\"popup__input popup__input_type_userInfo\"  placeholder=\"О себе\"/>\r\n                <span  id=\"error-inputUserInfoEdit\" className=\"error\"/>\r\n            </>  \r\n        }/>\r\n    );\r\n\r\n}\r\nexport default EditPopup;\r\n\r\n\r\n","C:\\WebSites\\mesto-react\\src\\components\\EditPhotoPopup.js",[],"C:\\WebSites\\mesto-react\\src\\components\\Api.js",[],"C:\\WebSites\\mesto-react\\src\\components\\Card.js",[],["75","76"],"C:\\WebSites\\mesto-react\\src\\components\\ImagePopup.js",[],"C:\\WebSites\\mesto-react\\src\\contexts\\CurrentUserContext.js",[],"C:\\WebSites\\mesto-react\\src\\components\\apiParams.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"77","replacedBy":"81"},{"ruleId":"79","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":35,"column":4,"nodeType":"85","endLine":35,"endColumn":6,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":7,"column":11,"nodeType":"89","messageId":"90","endLine":7,"endColumn":14},{"ruleId":"87","severity":1,"message":"91","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},{"ruleId":"77","replacedBy":"92"},{"ruleId":"79","replacedBy":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],["94"],["95"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'api'. Either include it or remove the dependency array.","ArrayExpression",["96"],"no-unused-vars","'api' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.",["94"],["95"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [api]",{"range":"99","text":"100"},[1110,1112],"[api]"]